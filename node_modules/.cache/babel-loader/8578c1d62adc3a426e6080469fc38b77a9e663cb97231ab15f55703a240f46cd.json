{"ast":null,"code":"var _jsxFileName = \"/Users/amankuldeep/Documents/WEB DEV/smartbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from './components/Particles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnRequestOptions = imageUrl => {\n  const PAT = 'bf70ff63b263462983db5ca8c6c8f6d6';\n  const USER_ID = 'aman00001';\n  const APP_ID = 'my-first-application-n9ryzl';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = 'imageUrl';\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n          // \"base64\": IMAGE_BYTES_STRING\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      console.log('click');\n      fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnRequestOptions).then(response => response.json()).then(result => {\n        const regions = result.outputs[0].data.regions;\n        regions.forEach(region => {\n          // Accessing and rounding the bounding box values\n          const boundingBox = region.region_info.bounding_box;\n          const topRow = boundingBox.top_row.toFixed(3);\n          const leftCol = boundingBox.left_col.toFixed(3);\n          const bottomRow = boundingBox.bottom_row.toFixed(3);\n          const rightCol = boundingBox.right_col.toFixed(3);\n          region.data.concepts.forEach(concept => {\n            // Accessing and rounding the concept value\n            const name = concept.name;\n            const value = concept.value.toFixed(4);\n            console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n          });\n        });\n      }).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: '',\n      imageUrl: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","jsxDEV","_jsxDEV","returnRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","fetch","then","response","json","result","regions","outputs","data","forEach","region","boundingBox","region_info","bounding_box","topRow","top_row","toFixed","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","concepts","concept","name","catch","error","state","input","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/amankuldeep/Documents/WEB DEV/smartbrain/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\n\nimport Particles from './components/Particles';\n\nconst returnRequestOptions = (imageUrl) => {\n    const PAT = 'bf70ff63b263462983db5ca8c6c8f6d6';\n    const USER_ID = 'aman00001';\n    const APP_ID = 'my-first-application-n9ryzl';\n    const MODEL_ID = 'face-detection';\n    const IMAGE_URL = 'imageUrl';\n\n    const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                    // \"base64\": IMAGE_BYTES_STRING\n                }\n            }\n        }\n    ]\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    };\n\n    return requestOptions;\n}\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl:''\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n  \n\n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnRequestOptions)\n      .then(response => response.json())\n      .then(result => {\n\n          const regions = result.outputs[0].data.regions;\n\n          regions.forEach(region => {\n              // Accessing and rounding the bounding box values\n              const boundingBox = region.region_info.bounding_box;\n              const topRow = boundingBox.top_row.toFixed(3);\n              const leftCol = boundingBox.left_col.toFixed(3);\n              const bottomRow = boundingBox.bottom_row.toFixed(3);\n              const rightCol = boundingBox.right_col.toFixed(3);\n\n              region.data.concepts.forEach(concept => {\n                  // Accessing and rounding the concept value\n                  const name = concept.name;\n                  const value = concept.value.toFixed(4);\n\n                  console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n                  \n              });\n          });\n\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles/>\n        <Navigation/>\n        <Logo/>\n        <Rank/>\n        <ImageLinkForm \n          onInputChange = {this.onInputChange} \n          onButtonSubmit = {this.onButtonSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}